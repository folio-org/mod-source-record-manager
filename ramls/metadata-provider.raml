#%RAML 1.0

title: Metadata Provider
version: v1.1
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost

documentation:
  - title: Metadata Provider API
    content: API for accessing metadata

types:
  logDto: !include raml-storage/schemas/dto/logDto.json
  logCollectionDto: !include raml-storage/schemas/dto/logCollectionDto.json
  jobExecution: !include raml-storage/schemas/mod-source-record-manager/jobExecution.json
  jobExecutionCollection: !include raml-storage/schemas/mod-source-record-manager/jobExecutionCollection.json
  jobExecutionDto: !include raml-storage/schemas/dto/jobExecutionDto.json
  jobExecutionCollectionDto: !include raml-storage/schemas/dto/jobExecutionCollectionDto.json
  errors: !include raml-storage/raml-util/schemas/errors.schema
  fileExtension: !include raml-storage/schemas/mod-source-record-manager/fileExtension.json
  fileExtensionCollection: !include raml-storage/schemas/mod-source-record-manager/fileExtensionCollection.json
  dataTypeCollection: !include raml-storage/schemas/mod-source-record-manager/dataTypeCollection.json

traits:
  validate: !include raml-storage/raml-util/traits/validation.raml
  language: !include raml-storage/raml-util/traits/language.raml
  pageable:  !include raml-storage/raml-util/traits/pageable.raml
  searchable: !include raml-storage/raml-util/traits/searchable.raml

resourceTypes:
  collection: !include raml-storage/raml-util/rtypes/collection.raml
  collection-item: !include raml-storage/raml-util/rtypes/item-collection.raml

/metadata-provider:
  /logs:
    get:
      is: [
        searchable: {description: "with valid searchable fields", example: "jobProfileName=marc"},
        pageable
      ]
      queryParameters:
        landingPage:
          description: "Flag that indicates whether requested collection of entities have to be prepared for rendering on the landing page"
          required: false
          default: false
          type: boolean
      responses:
        200:
          body:
            application/json:
              schema: logCollectionDto
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /jobExecutions:
    get:
      is: [
        searchable: {description: "with valid searchable fields", example: "status=RUNNING"},
        pageable
      ]
      responses:
        200:
          body:
            application/json:
              schema: jobExecutionCollectionDto
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /fileExtension:
    displayName: File Extension
    description: API for managing file extensions
    get:
      description: Get a list of file extensions
      is: [
        searchable: {
          description:
            "with valid searchable fields: for example importBlocked=true",
          example:
            "importBlocked=true"
        },
        pageable,
        validate
      ]
      responses:
        200:
          body:
            application/json:
              type: fileExtensionCollection
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
    post:
      description: Create new fileExtension
      is: [validate]
      body:
        application/json:
          type: fileExtension
      responses:
        201:
          body:
            application/json:
              type: fileExtension
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        422:
          description: "Unprocessable Entity"
          body:
            application/json:
              type: errors
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
    /{id}:
      get:
        description: Get fileExtension by id
        responses:
          200:
            body:
              application/json:
                type: fileExtension
          404:
            description: "Not found"
            body:
              text/plain:
                example: "Not found"
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
      put:
        description: Update fileExtension
        body:
          application/json:
            type: fileExtension
        responses:
          200:
            body:
              application/json:
                type: fileExtension
          400:
            description: "Bad request"
            body:
              text/plain:
                example: "Bad request"
          404:
            description: "Not found"
            body:
              text/plain:
                example: "Not found"
          422:
            description: "Unprocessable Entity"
            body:
              application/json:
                type: errors
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
      delete:
        description: Delete fileExtension by id
        responses:
          204:
            body:
              text/plain: !!null
          404:
            description: "Not found"
            body:
              text/plain:
                example: "Not found"
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
    /restore:
      /default:
        get:
          description: Restore fileExtension settings to default
          responses:
            200:
              body:
                application/json:
                  type: fileExtensionCollection
            400:
              description: "Bad request"
              body:
                text/plain:
                  example: "Bad request"
            422:
              description: "Unprocessable Entity"
              body:
                application/json:
                  type: errors
            500:
              description: "Internal server error"
              body:
                text/plain:
                  example: "Internal server error"

  /dataTypes:
      get:
        description: Get a list of data types
        responses:
          200:
            body:
              application/json:
                type: dataTypeCollection
          400:
            description: "Bad request"
            body:
              text/plain:
                example: "Bad request"
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
