#%RAML 1.0

title: Metadata Provider
version: v2.0
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost

documentation:
  - title: Metadata Provider API
    content: API for accessing metadata

types:
  jobExecution: !include raml-storage/schemas/mod-source-record-manager/jobExecution.json
  jobExecutionCollection: !include raml-storage/schemas/mod-source-record-manager/jobExecutionCollection.json
  errors: !include raml-storage/raml-util/schemas/errors.schema
  jobExecutionSourceChunk: !include raml-storage/schemas/mod-source-record-manager/jobExecutionSourceChunk.json
  jobExecutionLogDto: !include raml-storage/schemas/dto/jobExecutionLogDto.json
  journalRecordCollection: !include raml-storage/schemas/mod-source-record-manager/journalRecordCollection.json
  jobLogEntryDto: !include raml-storage/schemas/dto/jobLogEntryDto.json
  jobLogEntryDtoCollection: !include raml-storage/schemas/dto/jobLogEntryDtoCollection.json
  recordProcessingLogDto: !include raml-storage/schemas/dto/recordProcessingLogDto.json

traits:
  validate: !include raml-storage/raml-util/traits/validation.raml
  language: !include raml-storage/raml-util/traits/language.raml
  pageable:  !include raml-storage/raml-util/traits/pageable.raml
  searchable: !include raml-storage/raml-util/traits/searchable.raml

resourceTypes:
  collection: !include raml-storage/raml-util/rtypes/collection.raml
  collection-item: !include raml-storage/raml-util/rtypes/item-collection.raml

/metadata-provider:
  /jobExecutions:
    get:
      is: [
        searchable: {description: "with valid searchable fields", example: "status=RUNNING"},
        pageable
      ]
      responses:
        200:
          body:
            application/json:
              schema: jobExecutionCollection
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /logs/{jobExecutionId}:
      get:
        responses:
          200:
            body:
              application/json:
                schema: jobExecutionLogDto
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
  /journalRecords/{jobExecutionId}:
    get:
      description: get journal records by job execution id
      queryParameters:
        sortBy:
          description: sort criteria
          example: "source_record_order, action_type, error"
          type: string
          required: false
        order:
          description: sort direction
          example: desc
          enum: [asc, desc]
          default: asc
      responses:
        200:
          body:
            application/json:
              schema: journalRecordCollection
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        404:
          description: "Not found"
          body:
            text/plain:
              example: "Not found"
  /jobLogEntries/{jobExecutionId}:
    get:
      is: [pageable]
      description: get journal records by job execution id
      queryParameters:
        sortBy:
          description: "sorting by field: source_record_order, title, source_record_action_status, instance_action_status, holdings_action_status, item_action_status, order_action_status, invoice_action_status, error"
          example: source_record_order
          type: string
          required: false
          default: source_record_order
        order:
          description: "sorting direction"
          example: desc
          enum: [asc, desc]
          required: false
          default: asc
      responses:
        200:
          body:
            application/json:
              schema: jobLogEntryDtoCollection
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
  /jobLogEntries/{jobExecutionId}/records/{recordId}:
    get:
      description: get record processing log dto by job execution id and record id
      responses:
        200:
          body:
            application/json:
              schema: recordProcessingLogDto
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        404:
          description: "Not found"
          body:
            text/plain:
              example: "Not found"
