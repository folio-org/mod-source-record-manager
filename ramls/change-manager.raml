#%RAML 1.0

title: Change Manager
version: v1.1
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost

documentation:
  - title: Change Manager API
    content: API for accessing ChangeManager's bussiness logic

types:
  jobExecution: !include raml-storage/schemas/mod-source-record-manager/jobExecution.json
  jobExecutionDto: !include raml-storage/schemas/dto/jobExecutionDto.json
  fileDto: !include raml-storage/schemas/dto/fileDto.json
  initJobExecutionsRqDto: !include raml-storage/schemas/dto/initJobExecutionsRqDto.json
  initJobExecutionsRsDto: !include raml-storage/schemas/dto/initJobExecutionsRsDto.json
  rawRecordsDto: !include raml-storage/schemas/dto/rawRecordsDto.json
  parsedRecordDto: !include raml-storage/schemas/dto/parsedRecordDto.json
  errors: !include raml-storage/raml-util/schemas/errors.schema
  jobExecutionDtoCollection: !include raml-storage/schemas/dto/jobExecutionDtoCollection.json
  statusDto: !include raml-storage/schemas/dto/statusDto.json
  snapshot: !include raml-storage/schemas/mod-source-record-storage/snapshot.json
  record: !include raml-storage/schemas/dto/record.json
  recordCollection: !include raml-storage/schemas/dto/recordCollection.json
  jobProfileInfo: !include raml-storage/schemas/common/profileInfo.json
  userInfo: !include raml-storage/schemas/common/userInfo.json
  journalRecord: !include raml-storage/schemas/mod-source-record-manager/journalRecord.json
  dataImportEventTypes: !include raml-storage/schemas/common/dataImportEventTypes.json
  dataImportInitConfig: !include raml-storage/schemas/common/dataImportInitConfig.json
  jobExecutionProgress: !include raml-storage/schemas/mod-source-record-manager/jobExecutionProgress.json
  dataImportEventPayload: !include raml-storage/schemas/common/dataImportEventPayload.json
  sourceRecordState: !include sourceRecordState.json
  deleteJobExecutionsReq: !include raml-storage/schemas/mod-source-record-manager/deleteJobExecutionsReq.json
  deleteJobExecutionsResp: !include raml-storage/schemas/mod-source-record-manager/deleteJobExecutionsResp.json
  incomingRecord: !include raml-storage/schemas/mod-source-record-manager/incomingRecord.json

traits:
  validate: !include raml-storage/raml-util/traits/validation.raml
  pageable:  !include raml-storage/raml-util/traits/pageable.raml
  searchable: !include raml-storage/raml-util/traits/searchable.raml

resourceTypes:
  collection: !include raml-storage/raml-util/rtypes/collection.raml
  collection-item: !include raml-storage/raml-util/rtypes/item-collection.raml

/change-manager:
  /jobExecutions:
    delete:
      description: Delete JobExecution by multiple IDs
      body:
        application/json:
          schema: deleteJobExecutionsReq
      responses:
        200:
          body:
            application/json:
              schema: deleteJobExecutionsResp
    post:
      description: "Initialize JobExecutions"
      body:
        application/json:
          type: initJobExecutionsRqDto
      responses:
        201:
          body:
            application/json:
              type: initJobExecutionsRsDto
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
    /{id}:
      displayName: JobExecution
      description: Get or Update a specific JobExecution
      type:
        collection-item:
          schema: jobExecution
          exampleItem: !include raml-storage/examples/mod-source-record-manager/jobExecution.sample
      put:
        is: [validate]
        responses:
          200:
            body:
              application/json:
                type: jobExecution
      get:
        description: Get JobExecution by id
        responses:
          200:
            body:
              application/json:
                type: jobExecution
      /children:
        get:
          description: Get children JobExecutions by parent id, by default returns all existing children JobExecutions, in order to limit the collection parameter limit should be explicitly specified
          is: [
            pageable,
            validate
          ]
          queryParameters:
           limit:
             default: 2147483647
          responses:
            200:
              body:
                application/json:
                  type: jobExecutionDtoCollection
            404:
              description: "Not found"
              body:
                text/plain:
                  example: "Not found"
            500:
              description: "Internal server error"
              body:
                text/plain:
                  example: "Internal server error"
      /status:
        put:
          is: [validate]
          description: "Update JobExecution status"
          body:
            application/json:
              type: statusDto
          responses:
            200:
              body:
                application/json:
                  type: jobExecution
            400:
              description: "Bad request"
              body:
                text/plain:
                  example: "Bad request"
            404:
              description: "Not found"
              body:
                text/plain:
                  example: "Not found"
            500:
              description: "Internal server error"
              body:
                text/plain:
                  example: "Internal server error"
      /jobProfile:
        put:
          is: [validate]
          description: "Set JobProfile for JobExecution"
          body:
            application/json:
              type: jobProfileInfo
          responses:
            200:
              body:
                application/json:
                  type: jobExecution
            400:
              description: "Bad request"
              body:
                text/plain:
                  example: "Bad request"
            404:
              description: "Not found"
              body:
                text/plain:
                  example: "Not found"
            500:
              description: "Internal server error"
              body:
                text/plain:
                  example: "Internal server error"
      /records:
        post:
          is: [validate]
          description: "Receive chunk of raw records"
          queryParameters:
            acceptInstanceId:
              type: boolean
              required: false
              default: false
          body:
            application/json:
              type: rawRecordsDto
          responses:
            204:
            400:
              description: "Bad request"
              body:
                text/plain:
                  example: "Bad request"
            404:
              description: "Not found"
              body:
                text/plain:
                  example: "Not found"
            500:
              description: "Internal server error"
              body:
                text/plain:
                  example: "Internal server error"
        delete:
          description: "Delete JobExecution and associated records in SRS"
          responses:
            204:
            400:
              description: "Bad request"
              body:
                text/plain:
                  example: "Bad request"
            404:
              description: "Not found"
              body:
                text/plain:
                  example: "Not found"
            500:
              description: "Internal server error"
              body:
                text/plain:
                  example: "Internal server error"
  /parsedRecords:
    get:
      description: "Retrieve ParsedRecord by externalId"
      queryParameters:
        externalId:
          description: "externalId parameter"
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[1-5][a-fA-F0-9]{3}-[89abAB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}$"
          required: true
      responses:
        200:
          body:
            application/json:
              type: parsedRecordDto
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
    /{id}:
      description: Update ParsedRecord by id
      put:
        is: [validate]
        body:
          application/json:
            type: parsedRecordDto
        responses:
          202:
          400:
            description: "Bad request"
            body:
              text/plain:
                example: "Bad request"
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"
